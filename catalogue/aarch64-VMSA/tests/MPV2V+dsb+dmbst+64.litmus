AArch64 MPV2V+dsb+dmbst+64
{
pte_x=(valid:1,oa:phy_y);
int64_t x;
int64_t y=2;
int64_t z;
0:X1=(valid:1,oa:phy_x);
0:X2=pte_x;
0:X3=z; 1:X3=z; 
int64_t 0:X4=1;
1:X5=x;
int64_t 1:X6;
int64_t 1:X7;
}
P0          | P1         ;
STR X1,[X2] | LDR X6,[X3];
DSB ST      | DMB LD     ;
STR X4,[X3] | LDR X7,[X5]; 
exists(1:X6=1 /\ 1:X7=2)

(*
P0
W1   Store PTE-valid Virtx->PhysY
W2  Store PTE-valid Virtx->PhysX
D3   DSB
W3   Store Flag=1

P1
R4   Read Flag==1
D4   DMB (any local ordered-before would do)
RW5  Load/Store that uses the PTE written by W1/W2
*)
